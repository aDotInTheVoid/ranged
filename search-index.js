var N=null,E="",T="t",U="u",searchIndex={};
var R=["ranged","result","Ranged"];

searchIndex[R[0]]={"doc":"Note: this crate realy wants `const fn`s in traits.  ","i":[[3,R[2],R[0],E,N,N],[12,"min",E,E,0,N],[12,"max",E,E,0,N],[0,"impls",E,E,N,N],[0,"add","ranged::impls",E,N,N],[0,"mul",E,E,N,N],[0,"sub",E,E,N,N],[0,"helpers",R[0],E,N,N],[5,"max4","ranged::helpers",E,N,[[["num"]],["num"]]],[5,"min4",E,E,N,[[["num"]],["num"]]],[8,"Num",R[0],"Anything that behaves like a number",N,N],[11,"new",E,E,0,[[[T]],[R[0]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,"to_owned",E,E,0,[[["self"]],[T]]],[11,"clone_into",E,E,0,[[[T],["self"]]]],[11,"try_from",E,E,0,[[[U]],[R[1]]]],[11,"borrow",E,E,0,[[["self"]],[T]]],[11,"type_id",E,E,0,[[["self"]],["typeid"]]],[11,"borrow_mut",E,E,0,[[["self"]],[T]]],[11,"try_into",E,E,0,[[],[R[1]]]],[11,"eq",E,E,0,[[["self"],[R[0]]],["bool"]]],[11,"ne",E,E,0,[[["self"],[R[0]]],["bool"]]],[11,"clone",E,E,0,[[["self"]],[R[0]]]],[11,"fmt",E,E,0,[[["formatter"],["self"]],[R[1]]]],[11,"add",E,E,0,[[]]],[11,"add",E,E,0,[[[T]]]],[11,"sub",E,E,0,[[]]],[11,"sub",E,E,0,[[[T]]]],[11,"mul",E,E,0,[[]]]],"p":[[3,R[2]]]};
initSearch(searchIndex);addSearchOptions(searchIndex);